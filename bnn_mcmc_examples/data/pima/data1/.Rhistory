install.packages("rnaturalearth")
install.packages("units")
install.packages("geogrid")
install.packages("geofacet")
install.packages("randomForest")
install.packages("ROCR")
install.packages("lasso2")
install.packages("elasticnet")
install.packages("xgboost")
install.packages("lars")
library("xgboost")
q()
install.packages("factoextra")
library(factorextra)
library(factoextra)
q()
install.packages("MASS")
install.packages("bnlearn")
install.packages("ElemStatLearn")
install.packages("sand")
install.packages("mvtnorm")
install.packages("TruncatedNormal")
install.packages("truncnorm")
install.packages("MVT")
install.packages("BDgraph")
install.packages("deepnet")
install.packages("RcppDL")
install.packages("gam")
install.packages("mgcv")
install.packages("ssgraph")
install.packages("h2o")
install.packages("h2o4gpu")
install.packages("biglasso")
install.packages("pryr")
install.packages("gpuR")
install.packages("tree")
install.packages("BART")
install.packages("mlbench")
install.packages("neuralnet")
install.packages("opencv")
install.packages("opencv")
install.packages("slackr")
install.packages("cloudyR")
install.packages("dataCompareR")
q()
install.packages("flyio")
library(stringr)
library(rstan)
library(coda)
library(mcmc)
install.packages("MCMCpack")
install.packages("sgmcmc")
installTF()
installTF()
library(sgmcmc)
Y
conda activate r-reticulate
installTF()
q()
library(sgmcmc)
library(glmnet)
library(igraph)
q()
10771.18*12
4145+1850
0.65-0.7715832591056824
(0.65-0.7715832591056824)/11
(0.65-0.7715832591056824)/11/0.05
exp(0.65-0.7715832591056824)/11/0.05)
exp(0.65-0.7715832591056824/11/0.05)
exp((0.65-0.7715832591056824)/11/0.05)
exp(((0.65-0.7715832591056824)/11)/0.05)
epx(-0.011053023555062031/0.05)
exp(-0.011053023555062031/0.05)
exp(2.5236455640952866)
log(10)
exp(log(10)-((0.65-0.7715832591056824)/11)/0.05)
4413.2/12
1/85
13.99 * 12
sqrt(3)
45*8
45*8*5
5000/4
125*4
install.packages("plotrix")
library(plotrix)
source('~/tmp/tmp01.r')
pie(
slices,
labels=lbls,
explode=0.1,
main="Typle of land"
)
pie(
slices,
labels=lbls,
main="Typle of land"
)
pie(
slices,
labels=lbls,
main="Typle of land"
)
?pie
cols
cols <- c(
"green",
"yellow",
"red"
)
pie(
slices,
labels=lbls,
col=cols,
main="Typle of land"
)
cols <- c(
"darkgreen",
"yellow",
"red"
)
pie(
slices,
labels=lbls,
col=cols,
main="Typle of land"
)
cols <- c(
"forestgreen",
"yellow",
"red"
)
pie(
slices,
labels=lbls,
col=cols,
main="Typle of land"
)
100 * slices / sum(slices)
54.27 + 25.87 + 19.85
?pie
slices <- c(
0.040194895,
0.019161332,
0.014702419
)
100 * slices / sum(slices)
# 54.27441 25.87319 19.85240
lbls <- c(
"Grassland",
"Arable",
"Permanent"
)
cols <- c(
"forestgreen",
"yellow",
"red"
)
jpeg("land_chart.jpg", width = 350, height = "350")
pie(
slices,
labels=lbls,
col=cols,
main="Typle of land"
)
dev.off()
getwd()
?jpeg
# library(plotrix)
slices <- c(
0.040194895,
0.019161332,
0.014702419
)
100 * slices / sum(slices)
# 54.27441 25.87319 19.85240
lbls <- c(
"Grassland",
"Arable",
"Permanent"
)
cols <- c(
"forestgreen",
"yellow",
"red"
)
jpeg("land_chart.jpg", width = 350, height = 350)
pie(
slices,
labels=lbls,
col=cols,
main="Typle of land"
)
dev.off()
round(100 * slices / sum(slices), 2)
x <- seq(1, 3, by=0.01)
y <- x/(x-1)
plot(x, y)
y <- x/(x_1)
y <- x/(x+1)
y <- x/(x_1)
y <- x/(x+1)
plot(x, y)
6000/0.55
12*6000/0.55
install.packages("mlbench")
library(mlbench)
data(PimaIndiansDiabetes)
View(PimaIndiansDiabetes)
summary(PimaIndiansDiabetes)
is.na(PimaIndiansDiabetes)
table(is.na(PimaIndiansDiabetes))
768 * 9
table(PimaIndiansDiabetes$diabetes)
768*0.2
768*0.3
768*0.7
sapply(PimaIndiansDiabetes, function(x) sum(is.na(x)))
rowSums(is.na(PimaIndiansDiabetes))
# Load mlbench library, which contains the Pima dataframe
library(mlbench)
View(PimaIndiansDiabetes)
table(PimaIndiansDiabetes$diabetes)
ifelse(PimaIndiansDiabetes$diabetes == "pos", 1, 0)
sum(ifelse(PimaIndiansDiabetes$diabetes == "pos", 1, 0))
PimaIndiansDiabetes
out_frame <- PimaIndiansDiabetes
out_frame$diabetes <- ifelse(PimaIndiansDiabetes$diabetes == "pos", 1, 0)
out_frame
PimaIndiansDiabetes
out_frame
table(PimaIndiansDiabetes$diabetes)
print(table(PimaIndiansDiabetes$diabetes))
print("Table", table(PimaIndiansDiabetes$diabetes))
table(is.na(PimaIndiansDiabetes))
source('~/opt/python/packages/bnn_mcmc_examples/downloads/pima.r')
source('~/opt/python/packages/bnn_mcmc_examples/downloads/pima.r')
source('~/opt/python/packages/bnn_mcmc_examples/downloads/pima.r')
ratio
split
split.data
freqs
source('~/opt/python/packages/bnn_mcmc_examples/downloads/pima.r')
dframe
dim(dframe)
source('~/opt/python/packages/bnn_mcmc_examples/downloads/pima.r')
source('~/opt/python/packages/bnn_mcmc_examples/downloads/pima.r')
source('~/opt/python/packages/bnn_mcmc_examples/downloads/pima.r')
source('~/opt/python/packages/bnn_mcmc_examples/downloads/pima.r')
PimaIndiansDiabetes
source('~/opt/python/packages/bnn_mcmc_examples/downloads/pima.r')
data(PimaIndiansDiabetes)
View(PimaIndiansDiabetes)
print(dim(PimaIndiansDiabetes))
print(dim(PimaIndiansDiabetes2))
data(PimaIndiansDiabetes2)
print(dim(PimaIndiansDiabetes2))
View(PimaIndiansDiabetes2)
library(mlbench)
data(PimaIndiansDiabetes2)
print("Dimensions of dataframe:")
print(dim(PimaIndiansDiabetes2))
print("Checking for missing values:")
print(table(is.na(PimaIndiansDiabetes2)))
sapply(PimaIndiansDiabetes2, function(x) sum(is.na(x)))
na.omit(PimaIndiansDiabetes2)
dim(na.omit(PimaIndiansDiabetes2))
?lm
lm(diabetes ~ pregnant + glucose + pressure + triceps + insulin + mass + pedigree + age, data=PimaIndiansDiabetes2)
glm(diabetes ~ pregnant + glucose + pressure + triceps + insulin + mass + pedigree + age, data=PimaIndiansDiabetes2)
glm(diabetes ~ pregnant + glucose + pressure + triceps + insulin + mass + pedigree + age, data=PimaIndiansDiabetes2, family="binomial")
model <- glm(diabetes ~ pregnant + glucose + pressure + triceps + insulin + mass + pedigree + age, data=PimaIndiansDiabetes2, family="binomial")
summary(mmodel)
summary(model)
source('~/opt/python/packages/bnn_mcmc_examples/downloads/pima.r')
dframe$diabetes <- ifelse(PimaIndiansDiabetes$diabetes2 == "pos", 1, 0)
source('~/opt/python/packages/bnn_mcmc_examples/downloads/pima.r')
source('~/opt/python/packages/bnn_mcmc_examples/downloads/pima.r')
names(PimaIndiansDiabetes2)
sapply(PimaIndiansDiabetes2, function(x) sum(is.na(x)))
PimaIndiansDiabetes2[c("glucose")]
print(summary(model))
filtered_dframe <- PimaIndiansDiabetes2[c("glucose", "mass", "pedigree", "age")]
dim(filtered_dframe)
dim(na.omit(filtered_dframe))
sapply(PimaIndiansDiabetes2, function(x) sum(is.na(x)))
summary(glm(
diabetes ~  glucose + mass + pedigree + age,
data=PimaIndiansDiabetes2,
family="binomial"
))
filtered_dframe <- PimaIndiansDiabetes2[c("glucose", "mass", "pedigree", "age", "diabetes")]
480 + 150 + 80
680+330+380
630+330+380
760+230
710+180
630+860
760+390+1340+390+990+760+890+1490
5 / 8
library(mlbench)
data(PimaIndiansDiabetes2)
print("Dimensions of dataframe:")
print(dim(PimaIndiansDiabetes2))
dim(na.omit(PimaIndiansDiabetes2))
library(mlbench)
data(PimaIndiansDiabetes2)
print(c("Dimensions of dataframe:", dim(PimaIndiansDiabetes2)))
print(c("Dimensions of dataframe:"))
print(dim(PimaIndiansDiabetes2))
print("Dimensions of dataframe without missing values:")
dim(na.omit(PimaIndiansDiabetes2))
print("Checking for missing values:")
print(table(is.na(PimaIndiansDiabetes2))) # dataframe-wise
sapply(PimaIndiansDiabetes2, function(x) sum(is.na(x))) # column-wise
print("Missing values per column:")
sapply(PimaIndiansDiabetes2, function(x) sum(is.na(x))) # column-wise
print("Entries with missing values in the dataframe:")
print(table(is.na(PimaIndiansDiabetes2)))
print(rowSums(is.na(PimaIndiansDiabetes2)))
model <- glm(
diabetes ~ pregnant + glucose + pressure + triceps + insulin + mass + pedigree + age,
data=PimaIndiansDiabetes2,
family="binomial"
)
print("Summary of logistic regression:")
print(summary(model))
reduced_model <- glm(
diabetes ~  glucose + mass + pedigree + age,
data=PimaIndiansDiabetes2,
family="binomial"
)
print("Summary of logistic regression using only significant predictors:")
print(summary(reduced_model))
print("Frequency of diabetes cases:")
print(table(PimaIndiansDiabetes2$diabetes))
print(table(na.omit(PimaIndiansDiabetes2)$diabetes))
library(mlbench)
data(PimaIndiansDiabetes2)
print(c("Dimensions of dataframe:"))
print(dim(PimaIndiansDiabetes2))
print("Frequency of diabetes cases:")
print(table(PimaIndiansDiabetes2$diabetes))
print("Dimensions of dataframe without missing values:")
print(dim(na.omit(PimaIndiansDiabetes2)))
print("Frequency of diabetes cases:")
print(table(na.omit(PimaIndiansDiabetes2)$diabetes))
print("Missing values per column:")
print(sapply(PimaIndiansDiabetes2, function(x) sum(is.na(x))))
print("Entries with missing values in the dataframe:")
print(table(is.na(PimaIndiansDiabetes2)))
print("Missing values per row:")
print(rowSums(is.na(PimaIndiansDiabetes2)))
model <- glm(
diabetes ~ pregnant + glucose + pressure + triceps + insulin + mass + pedigree + age,
data=PimaIndiansDiabetes2,
family="binomial"
)
print("Summary of logistic regression:")
print(summary(model))
reduced_model <- glm(diabetes ~  glucose + mass + pedigree + age, data=PimaIndiansDiabetes2, family="binomial")
print("Summary of logistic regression using only significant predictors:")
print(summary(reduced_model))
reduced_dframe <- PimaIndiansDiabetes2[c("glucose", "mass", "pedigree", "age", "diabetes")]
View(reduced_model)
View(reduced_dframe)
as.numeric(reduced_dframe$diabetes)
?as.numeric
as.integer(reduced_dframe$diabetes)
?as.integer
reduced_dframe$diabetes <- ifelse(reduced_dframe$diabetes == "pos", 1, 0)
View(reduced_dframe)
View(PimaIndiansDiabetes2)
class(reduced_dframe$diabetes)
print(c("Dimensions of reduced dataframe:"))
print(dim(reduced_dframe))
print("Frequency of diabetes cases in reduced dataframe:")
print(table(reduced_dframe$diabetes))
print("Dimensions of reduced dataframe without missing values:")
reduced_dframe <- na.omit(reduced_dframe)
print(dim(reduced_dframe))
print("Frequency of diabetes cases in reduced dataframe:")
print(table(reduced_dframe$diabetes))
488+264
print("Dimensions of reduced dataframe without missing values:")
print(dim(na.omit(reduced_dframe)))
print("Frequency of diabetes cases in reduced dataframe without missing values:")
source('~/opt/python/packages/bnn_mcmc_examples/downloads/pima.r')
library(mlbench)
data(PimaIndiansDiabetes2)
print(c("Dimensions of dataframe:"))
print(dim(PimaIndiansDiabetes2))
print("Frequency of diabetes cases:")
print(table(PimaIndiansDiabetes2$diabetes))
print("Dimensions of dataframe without missing values:")
print(dim(na.omit(PimaIndiansDiabetes2)))
print("Frequency of diabetes cases without missing values:")
print(table(na.omit(PimaIndiansDiabetes2)$diabetes))
print("Missing values per column:")
print(sapply(PimaIndiansDiabetes2, function(x) sum(is.na(x))))
model <- glm(
diabetes ~ pregnant + glucose + pressure + triceps + insulin + mass + pedigree + age,
data=PimaIndiansDiabetes2,
family="binomial"
)
print("Summary of logistic regression:")
print(summary(model))
reduced_model <- glm(diabetes ~  glucose + mass + pedigree + age, data=PimaIndiansDiabetes2, family="binomial")
print("Summary of logistic regression using only significant predictors:")
print(summary(reduced_model))
reduced_dframe <- PimaIndiansDiabetes2[c("glucose", "mass", "pedigree", "age", "diabetes")]
reduced_dframe <- na.omit(reduced_dframe)
reduced_dframe$diabetes <- ifelse(reduced_dframe$diabetes == "pos", 1, 0)
print(c("Dimensions of reduced dataframe:"))
print(dim(reduced_dframe))
print("Frequency of diabetes cases in reduced dataframe:")
print(table(reduced_dframe$diabetes))
reduced_dframe
reduced_dframe[c("glucose", "mass", "pedigree", "age")]
reduced_dframe
reduced_dframe[c("glucose", "mass", "pedigree", "age")]
dim(reduced_dframe[c("glucose", "mass", "pedigree", "age")])
dim(reduced_dframe)
reduced_dframe[c("diabetes")]
dim(reduced_dframe[c("diabetes")])
2/7
data(BreastCancer)
library(mlbench)
data(BreastCancer)
BreastCancer
dim(BreastCancer)
dim(na.omit(BreastCancer))
?BreastCancer
0.7*683
library(mlbench)
data(PimaIndiansDiabetes2)
print(c("Dimensions of dataframe:"))
print(dim(PimaIndiansDiabetes2))
print("Frequency of diabetes cases:")
print(table(PimaIndiansDiabetes2$diabetes))
print("Dimensions of dataframe without missing values:")
print(dim(na.omit(PimaIndiansDiabetes2)))
print("Frequency of diabetes cases without missing values:")
print(table(na.omit(PimaIndiansDiabetes2)$diabetes))
print("Missing values per column:")
print(sapply(PimaIndiansDiabetes2, function(x) sum(is.na(x))))
na.omit(PimaIndiansDiabetes2)
reduced_dframe <- na.omit(PimaIndiansDiabetes2)
View(reduced_dframe)
model <- glm(
diabetes ~ pregnant + glucose + pressure + triceps + insulin + mass + pedigree + age,
data=reduced_dframe,
family="binomial"
)
print("Summary of logistic regression:")
print(summary(model))
View(reduced_dframe)
reduced_dframe$diabetes <- ifelse(reduced_dframe$diabetes == "pos", 1, 0)
View(reduced_dframe)
setwd("~/opt/python/packages/bnn_mcmc_examples/bnn_mcmc_examples/data/pima")
print(c("Dimensions of reduced dataframe:"))
print(dim(reduced_dframe))
print("Frequency of diabetes cases in reduced dataframe:")
print(table(reduced_dframe$diabetes))
reduced_drame[-c("diabetes")]
reduced_dframe[-c("diabetes")]
reduced_dframe[c(1, 2, 3, 4, 5, 6, 7, 8)]
View(reduced_dframe)
write.table(reduced_dframe[c(1, 2, 3, 4, 5, 6, 7, 8)], "x.csv", quote=FALSE, sep=",", row.names=FALSE)
write.table(reduced_dframe[c("diabetes")], "y.csv", quote=FALSE, sep=",", row.names=FALSE)
library(mlbench)
data(PimaIndiansDiabetes2)
print(c("Dimensions of dataframe:"))
print(dim(PimaIndiansDiabetes2))
print("Frequency of diabetes cases:")
print(table(PimaIndiansDiabetes2$diabetes))
print("Dimensions of dataframe without missing values:")
print(dim(na.omit(PimaIndiansDiabetes2)))
print("Frequency of diabetes cases without missing values:")
print(table(na.omit(PimaIndiansDiabetes2)$diabetes))
print("Missing values per column:")
print(sapply(PimaIndiansDiabetes2, function(x) sum(is.na(x))))
reduced_dframe <- na.omit(PimaIndiansDiabetes2)
model <- glm(
diabetes ~ pregnant + glucose + pressure + triceps + insulin + mass + pedigree + age,
data=reduced_dframe,
family="binomial"
)
print("Summary of logistic regression:")
print(summary(model))
View(PimaIndiansDiabetes2)
library(mlbench)
data(PimaIndiansDiabetes2)
print(c("Dimensions of dataframe:"))
print(dim(PimaIndiansDiabetes2))
print("Frequency of diabetes cases:")
print(table(PimaIndiansDiabetes2$diabetes))
print("Dimensions of dataframe without missing values:")
print(dim(na.omit(PimaIndiansDiabetes2)))
print("Frequency of diabetes cases without missing values:")
print(table(na.omit(PimaIndiansDiabetes2)$diabetes))
print("Missing values per column:")
print(sapply(PimaIndiansDiabetes2, function(x) sum(is.na(x))))
reduced_dframe <- na.omit(PimaIndiansDiabetes2)
reduced_dframe
reduced_dframe[, -1]
reduced_dframe[, -9]
setwd("~/opt/python/packages/bnn_mcmc_examples/bnn_mcmc_examples/data/pima/data2")
source('~/opt/python/packages/bnn_mcmc_examples/downloads/pima_data2.r')
setwd("~/opt/python/packages/bnn_mcmc_examples/bnn_mcmc_examples/data/pima/data1")
source('~/opt/python/packages/bnn_mcmc_examples/downloads/pima_data1.r')
